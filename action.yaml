name: Run tests using Marathon Cloud
description: Run tests using Marathon Cloud
inputs:
  version:
    description: marathon-cloud cli version to use
    required: true 
  apiKey:
    description: "API key for authenticating with Marathon Cloud"
    required: true
  application:
    description: "Application binary path, e.g. apk file for Android or zip file of iOS Application"
    required: true
  testApplication:
    description: "Test application binary path, e.g. apk file for Android or zip file of iOS Test Runner app"
    required: true
  platform:
    description: "Testing platform. Android or iOS only"
    required: true
  osVersion:
    description: "Android or iOS OS version"
    required: false
  systemImage:
    description: "OS-specific system image. For Android one of [default,google_apis]. For iOS only [default]"
  link:
    description: "Link to commit"
    required: false
  output:
    description: "Output folder"
    required: false
  isolated:
    description: "Run each test in isolation, i.e. isolated batching"
    required: false
  flavor:
    description: "Type of tests to run. Default: [native]. Possible values: [native, js-test-appium, python-robotframework-appium]"
    required: false
  filterFile:
    description: "File containing test filters in YAML format, following the schema described at https://docs.marathonlabs.io/runner/configuration/filtering/#filtering-logic. For iOS see also https://docs.marathonlabs.io/runner/next/ios#test-plans."
    required: false
  wait:
    description: "Wait for test run to finish if true, exits after triggering a run if false. Defaults to true"
    required: false
branding:
  color: purple
  icon: play-circle
runs:
  using: composite
  steps:
    - name: Setup marathon-cloud
      uses: MarathonLabs/setup-marathon-cloud@2
      with:
        version: ${{ inputs.version }}
    - name: Run tests using marathon-cloud
      uses: MarathonLabs/action-invoke@1
      with:
        apiKey: ${{ inputs.apiKey }}
        application: ${{ inputs.application }}
        testApplication: ${{ inputs.testApplication }}
        platform: ${{ inputs.platform }}
        osVersion: ${{ inputs.osVersion }}
        systemImage: ${{ inputs.systemImage }}
        link: ${{ inputs.link }}
        output: ${{ inputs.output }}
        isolated: ${{ inputs.isolated }}
        flavor: ${{ inputs.flavor }}
        filterFile: ${{ inputs.filterFile }}
        wait: ${{ inputs.wait }}
